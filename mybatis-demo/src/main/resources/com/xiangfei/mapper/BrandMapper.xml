<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xiangfei.mapper.BrandMapper">
    <!--
        数据库表的字段名称和实体类的属性名不一样，则不能自动封装数据
            * 起别名：对不一样的列名起别名，让别名和实体类的属性名一样
            *使用resultMap
                1.定义resultMap标签
                2.在<select>标签中，使用resultMap属性替换resultType属性
    -->
    <!--
        id：唯一标识
        type：映射的类型，也支持别名
    -->
    <resultMap id="brandResultMap" type="com.xiangfei.pojo.Brand">
        <!--
            id：完成主键字段映射
                column：表的列名
                property：实体类的属性名
            resul：完成一般字段的映射
                column：表的列名
                property：实体类的属性名
        -->
        <result column="brand_name" property="brandName"/>
        <result column="company_name" property="companyName"/>
    </resultMap>

    <select id="selectAll" resultMap="brandResultMap">
        select * from tb_brand
    </select>

    <!--
        *参数占位符：
            1.#{}：会将其替换为？，为了防止SQL注入
            2.${}：拼sql，会存在SQL注入问题
            3.使用时机：
                * 参数传递的时候：#{}
                * 表名或者列明不固定的情况下：${}
         *参数类型：parameterType可以省略
         *特殊字符的处理
            1.转义字符：比如小于号<  &lt;
            2.CDATA区：字符比较多时用
            <![CDATA[
                内容
            ]]>
    -->
    <select id="selectById" parameterType="integer" resultMap="brandResultMap">
        select * from tb_brand where id = #{id}
    </select>

    <!--条件查询-->
<!--    <select id="selectByCondition" resultMap="brandResultMap">-->
<!--        select *-->
<!--        from tb_brand-->
<!--        where-->
<!--            status = #{status}-->
<!--        and company_name like #{companyName}-->
<!--        and brand_name like #{brandName}-->
<!--    </select>-->

    <!--动态条件查询-->
    <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="companyName != null and companyName != ''">
                and company_name like #{companyName}
            </if>
            <if test="brandName != null and brandName != ''">
                and brand_name like #{brandName}
            </if>
        </where>
    </select>
    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
        <choose><!--相当于Switch-->
            <when test="status != null and status != ''"><!--相当于Case-->
                status = #{status}
            </when>
            <when test="companyName != null and companyName != ''"><!--相当于Case-->
                company_name = #{companyName}
            </when>
            <when test="brandName != null and brandName != ''"><!--相当于Case-->
                brand_name = #{brandName}
            </when>
        </choose>
        </where>
    </select>

    <!--keyProperty将主键的值放到属性上-->
    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into tb_brand (brand_name, company_name, ordered, description, status)
        value (#{brandName}, #{companyName}, #{ordered}, #{description}, #{status})
    </insert>

    <update id="update">
        update tb_brand
        <set>
            <if test="brandName != null and brandName != ''">
                brand_name = #{brandName},
            </if>
            <if test="companyName != null and companyName != ''">
                company_name = #{companyName},
            </if>
            <if test="ordered != null">
                ordered = #{ordered},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="status != null and status != ''">
                status = #{status}
            </if>
        </set>
        where
            id = #{id}
    </update>

    <delete id="deleteById">
        delete from tb_brand where id = #{id}
    </delete>

    <delete id="deleteByIds">
        delete from tb_brand where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

</mapper>